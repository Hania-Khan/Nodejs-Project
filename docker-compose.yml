version: "3.8"  # Specifies the Docker Compose file format version

services:  # Defines the different services/containers that make up the application
  app:  # First service named "app"
    build: .  # Builds the Docker image using the Dockerfile in the current directory
    image: node-app-image-1  # Names the built image as "node-app-image-1"
    ports:
      - "4002:4001"  # Maps host port 4002 to container port 4001 (format: HOST:CONTAINER)
    volumes:
      - ./:/app  # Mounts current directory to /app in container (for code synchronization)
      - /app/node_modules  # Creates anonymous volume for node_modules (to prevent overwriting)
    environment:  # Sets environment variables for the container
      MONGO_URI: mongodb://user:user123@mongo:27017/  # MongoDB connection string
      APP_PORT: 4001  # Port the application should listen on inside container
    depends_on:
      - mongo  # Ensures mongo service starts before this service

  mongo:  # Second service named "mongo" (MongoDB database)
    image: mongo  # Uses official MongoDB image from Docker Hub
    restart: always  # Automatically restarts if container stops
    environment:  # Sets environment variables for MongoDB
      MONGO_INITDB_ROOT_USERNAME: user  # Root username for MongoDB
      MONGO_INITDB_ROOT_PASSWORD: user123  # Root password for MongoDB

  mongo-express:  # Third service named "mongo-express" (Web-based MongoDB admin interface)
    image: mongo-express  # Uses official mongo-express image from Docker Hub
    restart: always  # Automatically restarts if container stops
    ports:
      - "8081:8081"  # Maps host port 8081 to container port 8081
    environment:  # Sets environment variables for mongo-express
      ME_CONFIG_MONGODB_ADMINUSERNAME: user  # MongoDB admin username
      ME_CONFIG_MONGODB_ADMINPASSWORD: user123  # MongoDB admin password
      ME_CONFIG_MONGODB_URL: mongodb://user:user123@mongo:27017/  # Connection URL
      ME_CONFIG_BASICAUTH: false  # Disables HTTP basic authentication